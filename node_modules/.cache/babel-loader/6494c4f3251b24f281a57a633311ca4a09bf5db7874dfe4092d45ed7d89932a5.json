{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';import rootReducer from'../reducer/reducers';import storage from\"redux-persist/lib/storage\";const persistConfig={key:'root',storage,whitelist:['userDetail','loginDetail'],//Things you want to persist\nblacklist:['key3','key4']//Things you don't want to persist\n};// Middleware: Redux Persist Persisted Reducer\nconst persistedReducer=persistReducer(persistConfig,rootReducer);export const store=configureStore({reducer:persistedReducer,middleware:getDefaultMiddleware=>getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}})});export const persistor=persistStore(store);// import { configureStore } from \"@reduxjs/toolkit\";\n// import userSlice from \"../reducer/slices\";\n// const store = configureStore({\n//     reducer:{\n//         users:userSlice\n//     }\n// })\n// export default store;","map":{"version":3,"names":["configureStore","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","storage","persistConfig","key","whitelist","blacklist","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["D:/NGS/NGS/src/redux/store/store.jsx"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore, persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport rootReducer from '../reducer/reducers';\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['userDetail','loginDetail'],//Things you want to persist\n  blacklist: ['key3', 'key4'],//Things you don't want to persist\n};\n\n// Middleware: Redux Persist Persisted Reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\nexport const persistor = persistStore(store);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { configureStore } from \"@reduxjs/toolkit\";\n// import userSlice from \"../reducer/slices\";\n// const store = configureStore({\n//     reducer:{\n//         users:userSlice\n//     }\n// })\n// export default store;\n\n\n\n\n\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,OACEC,YAAY,CAAEC,cAAc,CAC5BC,KAAK,CACLC,SAAS,CACTC,KAAK,CACLC,OAAO,CACPC,KAAK,CACLC,QAAQ,KACH,eAAe,CACtB,MAAO,CAAAC,WAAW,KAAM,qBAAqB,CAC7C,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAE/C,KAAM,CAAAC,aAAa,CAAG,CACpBC,GAAG,CAAE,MAAM,CACXF,OAAO,CACPG,SAAS,CAAE,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AACxCC,SAAS,CAAE,CAAC,MAAM,CAAE,MAAM,CAAE;AAC9B,CAAC,CAED;AACA,KAAM,CAAAC,gBAAgB,CAAGb,cAAc,CAACS,aAAa,CAAEF,WAAW,CAAC,CACnE,MAAO,MAAM,CAAAO,KAAK,CAAGhB,cAAc,CAAC,CAClCiB,OAAO,CAAEF,gBAAgB,CACzBG,UAAU,CAAGC,oBAAoB,EAC/BA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAAClB,KAAK,CAAEC,SAAS,CAAEC,KAAK,CAAEC,OAAO,CAAEC,KAAK,CAAEC,QAAQ,CACpE,CACF,CAAC,CACL,CAAC,CAAC,CACF,MAAO,MAAM,CAAAc,SAAS,CAAGrB,YAAY,CAACe,KAAK,CAAC,CA4B5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}